<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAYAAAAGAAAAAAAAAAAA
        AADe3Nzf3dza3dvd3d3e3Nvf3dze3Nve3Nzf3dzd29vd3d3e3Nzb3d3e3Nze3Nzf3dzc3Nzd3d3a3dvd
        3d3e3Nze3Nzf3d3e3Nzc3dvd3d3e3Nzf3d3h3N3d3d3Y3dzd3tzi3d7h39/h4eHi3d7l3+Dk3+Dg3t7g
        3t7g3t3f39/g3+Hl4OHh39/l4OLi4ODi4ODj3t/l3+Di4ODh39/k3+Dk3+Dg3t7f39/e393i3d7i3+Hh
        39/i4ODe4ODi4ODi3d7g4ODS2tnAzs24ysm6zMvK1dPb4N/j4eHg4ODL19e6zMu3zMq/z87E0tG/zcy1
        zMi5zszP19fR1tXAzsy2zcm5zsvM19Xh39/i4ODg3+HJ1dW4zcu3zMq+zs3S19jj4eHR2disxMKkxcGn
        xsOkxcGkw8DF09Lq5OXN19elwr+mxcKox8SewL+HtLGXvrynxsOmxcSZvrybwL6mx8OnxsOjxMCqxcLO
        1tbp4+TB0dCkw8ClxsKnxsOkw8CrxsPT2di6z82lxMGpvr+ktLOmvLqpxcWzyMbl4+O6z82nxsOpvryo
        trWWsrKIt7WStLOltbSnv7+SuLiUu7mnvbuns7Oovb6lxMO9z87h4eGyyMaoxMSpu7qns7OqwL6jxMC6
        z826z82nx8amtbegm52mrq6oxMSxzMni4uK3zM2ox8SqtLSim56SpKWIubePr66inZ+lsbGRvLmSurin
        r6+inJ2mtLOoycW4zcvf4eGuycapxsOkqaqhnJ6ntbSox8S4zsy9z86oyMept7aioKCmsLCpyMevycnj
        5eW6zs+pyMWotrWloKKTp6iNureQsK+hoKKltbSRvLmUvLqlsrCkn6CqtranyMS6z83h4+OxzMmpyMWj
        ra2ioaOotrWryMW70M69z86oyMerubiloKGmsa+rx8eyysrn6Oa7z9Cqycant7anoaKSqKaLureRsbCh
        oaGntbSTu7qVu7umsrKjoaGqtrapyci70M7n5eWuy8ityMWmrq6joKKrubimycW+0M+/0dKpyMWquLan
        oqOmsLCuyMirysm5z82xycmsy8qnt7aooaSTqaePureQsrGioqKptbWSvbqUvLunsbGjoaGlt7atzMmv
        ycm5zs+vycmsyMiora6moaOouLepyci70c+909Gsycaru7qkoqKmq6yuyMiuysqrysesy8ityMWpq6ym
        pKSRqaeLureQsrGnoqSotrWRvruTvrurs7Olo6Oora6txcOwysqqy8eszcmtyMWnq6yioaOru7qsyMjC
        0tHH2tesycasxMSnpqikpKSmq6yrtbWrubins7Olp6iopqalpaWWqKeOu7iSsrGmo6Wpt7aUvLqXvryr
        s7OloqSipqenqaqns7OoubaotrWnrK2loqSmqKmuxMKpysbL2djg5OWuysqtycmuxMKqtrasrq+uq62p
        q6yrsLGvvbyuvr2qrK2Wq6yLvbmSsrGlpaWquLeRvruVvbusuLqqrK2tvbysurmprq+pqampqKqlra2u
        travxcOuy8iuy8je5uby8PDW4OCyzcqwzcqjyMaUvr2JtrOEs7CEtrKPureew8Gqycicwb+NubiYtbKn
        paWqurmbwsCTvbyqxsanx8azzc2zzsuszcmtysevy8uwzMyvy8uoyMexy8va4uLz8fHs7+329PTR3d2E
        s7BvqKVvqahqq6lrrahvqqZrqKRwp6Rzrah4r6yHuLatvbyqpKWvu7uXv710q6h2rapzr6mEs7Cvy8u3
        z82yysisy8qOurl3rqt0rql+sKzC1tfz8fH18/Lf5+eCsa5pqaRwq6dun51rj49riottnJpxqqdyq6hx
        rKhtqKR2raqkubqpp6ektrd1rahuqaVvqqZvqKVnpKCOu7jq7O3p7u23z89npKBtqKRwq6dqp6NxqaTX
        4eH18/OSvLtlpqRwpKRleXphYGJhYGJhXmBuk5FwsKtrlZRlfH5wn51tqqaMrq2xqaqTrqtsrKZun51j
        dnlrjY1vrKhzq6bb5eX99/idwr5pqaNrk5JldHdunJ1np6K1zc3f5+ZvqahtqahndnhiXGFpgoRwn51w
        paJvqqZzrqpogYNdVltslpVvq6qBqaisqqqUr6xvq6pvnpxhXmBnfXtwrKtvqqbV4uD89/icwb9rqqho
        iopeV1ptlZRnpqSrysnG29lsqaVvoJ5kYWNlentwsKtrq6ZppqJrqKR0raptiYpgXGFslpVyrKt3qKas
        qaucsa9trKptop9hY2Rqf4ByrKtyqabW4+H++fqmxsVqqadtj49fXF5qlpVlqKWsy8q20c5mqKNsmJdj
        XmBoiolsrKeNurfW4uKUvLtsrKdnjY1hXWJsl5Rwq6d0qaaqqaudsrBtrahvoZ9iY2dmfn5yrKtwqabY
        5OT9+/uix8VnqaRukJBfXF5ulpVop6Wry8q1z89pqaRrmphhXmBqjIxrp6acxML///+kxsZpqaRrjY1h
        XWJtmJVtrahwqaamqqucsbJvrKhsoZ5gY2dnf39vrqxvqqbX5eT//P2oyMdsqaVrkI5iXV9tlZRop6Wu
        zcq20NBqp6NrmpdfXmBpi4tqqaegwsH//f2excNuqaVsjo5fXmJtlZNwralvqKWtqa6csbJyralvoJ5k
        Y2dofH1vq6pvqqbe5ej//v+nychrqKRskY9iXV9rk5Jop6Wmy8ez0tFmp6Vrl5ZgX2FqjIxqqaefxML9
        //+gxcNqqqVojIxiW2BslJJyralyqaait7iVt7ZtqqZvoZ9iYWVme3xvrKhrpqLA1dbp8fGbwsBqqqVp
        kI5dWlxskpJqpqWoycW20c5qpqVvmZhfXmBsjIttqqacxML///+uzcxqqqVtk5NgWl9oh4Z0r6twq6dw
        rqhwq6dyr6tsmZZfW2BrhYVxrqpwq6dvqqZxq6Zwq6dwsKtpg4NgXV9xmZhmp6W51NG10s9qpqVrl5Zg
        W11pi4pqqqWew8H//v/P3uBmpqFvpqNgbG5lZGhplZRxpqNxqKVup6RtnJpjbG9fYGRsnppxrKhvpqNx
        pqNsqaVxpqNskJBgX2NjcXBvqKVrp6bZ5+a41dJppqJunJ1ldHdsl5Rnp6KhxsT////n7+9yrKdwqaZu
        np9lcXVhYmZiampjbW1ibGxkYGVgbG5vk5Nyral0p6NhdXZkaGljbW1kaWpiYWNkdndvoJ5oqKOJuLX3
        +fre6+luqaVnpqRqrKdqp6Nmo5/J3d7//////f+Wvrxiop1uqKdwqaZvnpxrj49pi4tqjo5wmplsp6Nr
        q6Zqp6NtqKRumJdpjY1pio1rkZFqn5xvqKVqp6N3rajc6Oj9/////v7H39+Pubh9sKyIt7TE2dr8+/3+
        //38/v7w9PWgx8V+sK5xrKhrpqJnqaRtqKRpqaRopaFxqqeJtbSHs7Jsp6Nnp6JpqaRqpqVoqKNqp6N1
        q6aYwL7h7e/6//7//fz9/f3//v/9/P77+fn4/fz//////v79/f38/fv////7///4+vvi7OzC2tiqzMuk
        xsWqysm81tbZ6ej5+/z3+frX5+a71dWmy8mmyMeuzcrD29nj7+///v/+/f/8/v7//P3+/v78/v7/////
        //7///7+/v78/v78/v7///79/f3+/v7////////////9///9///9/////////v7////9///9////////
        ///7///9///////+/v7//////v7////+/v78/v7//v///v7+/f/8/v/9/f3+/v7//v79/f3////8/v7/
        ///9/f38/v7+/v7//v7//v7//v7////8//38//3+/v7////8/v79/f3+/v77/f3//f78/v79///9/f3+
        /v7//////f38/v7//v/9/P7////8/v7+/v7+/v7//v77/f3//////v78/v78/v7+/v7+/v7+/v7+/v79
        /f3//////v7+/v7+/v7//v///f///f/+/v7//v79/f3//////f36/v///v78//3//f3//////P3+/v7+
        /f/+/v79/f3////6//7//v7+/v7+/v78/v7+/v7+/v7+/v7////+/v7////+/v7+/v7+/v7+/v78/v78
        /v78/v7//v78/v7+/f8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>